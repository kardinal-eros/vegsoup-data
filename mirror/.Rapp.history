source("/Users/roli/Documents/vegsoup-data/wittmann2007/MakeVegsoup.R")
ls()
Wittmann2007$observer
require(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/wittmann2007"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
source(file.path(path, "MakeVegsoup1.R"))#
source(file.path(path, "MakeVegsoup2.R"))#
#
#	bind data sets#
obj <- vegsoup::bind(tab1, tab2)#
#
#	assign result object#
assign(key, obj)#
#
#	richness#
obj$richness <- richness(obj, "sample")#
#
#	add observer#
obj$observer <- "Wittmann et al"
obj$observer
source("/Users/roli/Documents/vegsoup-data/wittmann2007/MakeVegsoup.R")
require(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/wittmann2007"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
source(file.path(path, "MakeVegsoup1.R"))#
source(file.path(path, "MakeVegsoup2.R"))#
#
#	bind data sets#
obj <- vegsoup::bind(tab1, tab2)#
#
#	add observer#
obj$observer
source("/Users/roli/Documents/vegsoup-data/wittmann2007/MakeVegsoup.R")
Wittmann2007$observer
source("/Users/roli/Documents/vegsoup-data/wittmann2007/MakeVegsoup.R")
Wittmann2007$observer
source("/Users/roli/Documents/vegsoup-data/mirror/mirror.R")
X$remarks
X$remarks[ grep("date", X$remarks) ]
X$remarks <- as.character(X$remarks)
X$remarks[ grep("date", X$remarks) ]
source("/Users/roli/Documents/vegsoup-data/mirror/mirror.R")
source("/Users/roli/Documents/vegsoup-data/wittmann2007/MakeVegsoup.R")
source("/Users/roli/Documents/vegsoup-data/mirror/mirror.R")
source("/Users/roli/Documents/vegsoup-data/faber1936/MakeVegsoup.R")
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/bürmoos dta"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ";")#
X <- X[, 1:4]#
#
file <- file.path(path, "sites.csv")#
#	promote to class "Sites"#
Y <- sites(file, sep = ";")#
#
file <- "~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv"#
#	promote to class "SpeciesTaxonomy"#
XZ <- SpeciesTaxonomy(X, file.y = file)#
#
#	build "Vegsoup" object#
obj <- Vegsoup(XZ, Y, coverscale = "braun.blanquet")#
#
#	order layer#
layers(obj)	 <- c("tl1", "sl", "hl", "ml")#
obj <- layers(obj, collapse = c("tl", "sl", "hl", "ml"))#
#
#	assign result object#
assign(key, obj)#
#
#	richness#
obj$richness <- richness(obj, "sample")#
#
#	add citation#
obj$author <- ifelse(length(bib$author) > 1, paste0(as.character(bib$author), collapse = ", "), as.character(bib$author))#
obj$citation <- format(bib, style = "text")#
#
#	save to disk#
do.call("save", list(key, file = file.path(path, paste0(key, ".rda"))))#
write.verbatim(obj, file.path(path, "transcript.txt"), sep = "", add.lines = TRUE, select = "richness")#
#
#	tidy up#
rm(list = ls()[-grep(key, ls())])
ls()
bm$date
require(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/erschbamer1992"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "Erschbamer1992Tab4.txt")#
#
# read digitized table#
x1 <- read.verbatim(file, colnames = "Aufnahme Nr.")#
#
# extract header (sites) data from VegsoupVerbatim object#
y1 <- header(x1)#
#
# translate and groome names#
names(y1) <- c("plot", "altitude", "aspect", "slope", "cover", "pH", "block")#
#
# promote to Sites object	#
y1$plot <- rownames(y1) # header returns plot names as rownames #
y1 <- stackSites(y1, schema = "plot")#
#
# promote table body to Species object#
x1 <- species(x1)#
#
# get species from table footer#
# a listing of species not covered by the main table and plot where they occur in#
# the source does not supply any abundance values, we assume '+'#
file <- file.path(path, "Erschbamer1992Tab4Tablefooter.txt")#
x2 <- castFooter(file, species.first = TRUE, abundance.first = NA,#
                 abundance = "+")#
x2$plot <- sprintf("%03d", as.numeric(x2$plot))#
richness(x2)#
# bind species in table footer with main table#
X <- vegsoup::bind(x1, x2)#
#
#   additional sites data including coordinates as a tab delimited file#
file <- file.path(path, "Erschbamer1992Tab4Locations.txt")#
y2 <- read.delim(file, colClasses = "character")#
head(y2)#
# add leading zeros#
y2$nr <- sprintf("%03d", as.numeric(y2$nr))#
# promote to class "Sites"#
y2 <- stackSites(y2, schema = "nr")#
#
#	bind with sites data from table header#
Y <- vegsoup::bind(y1, y2)#
#
# taxonomy reference list#
file <- "~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv"#
Z <- taxonomy(file, sep = ";")#
#
# groome abundance scale codes to fit the standard#
# of the extended Braun-Blanquet scale used in the origional publication#
X$cov <- gsub("m", "2m", X$cov)#
X$cov <- gsub("a", "2a", X$cov)#
X$cov <- gsub("b", "2b", X$cov)#
#
# promote to class "Vegsoup"#
obj <- Vegsoup(X, Y, Z, coverscale = "braun.blanquet")
names(obj)
obj$altitude
obj$accuracy
source("/Users/roli/Documents/vegsoup-data/erschbamer1992/MakeVegsoup.R")
source("/Users/roli/Documents/vegsoup-data/bürmoos dta/MakeVegsoup.R")
ls()
bm$date
source("/Users/roli/Documents/vegsoup-data/faber1936/MakeVegsoup.R")
ls()
Faber1936$date
source("/Users/roli/Documents/vegsoup-data/faber1936/MakeVegsoup.R")
source("/Users/roli/Documents/vegsoup-data/mirror/mirror.R")
source("/Users/roli/Documents/vegsoup-data/bürmoos dta/MakeVegsoup.R")
bm$date
source("/Users/roli/Documents/vegsoup-data/mirror/mirror.R")
source("/Users/roli/Documents/vegsoup-data/schidergraben dta/MakeVegsoup.R")
source("/Users/roli/Documents/vegsoup-data/bürmoos dta/MakeVegsoup.R")
source("/Users/roli/Documents/vegsoup-data/mirror/mirror.R")
source("/Users/roli/Documents/vegsoup-data/erschbamer1992/MakeVegsoup.R")
test <- any(is.na(X$date))
test
test <- any(is.na(X$date))
test
is.na(X$date)
#	this is a build script for all available data sets#
#	referencing to https://github.com/kardinal-eros/vegsoup-standards/tree/master/austrian%20standard%20list%202008#
#
library(vegsoup)#
library(RefManageR)#
library(knitr)#
library(rgdal)#
library(naturalsort)#
library(bibtex)#
library(stringr)#
#
rm(list = ls())#
#
path <- "~/Documents/vegsoup-data"#
x <- list.files(path)#
#
#	ignore these files#
ii <- c(#
#	other files#
	"CHANGES.md",#
	"README.md",#
	"README.png",	#
	"mirror",#
	"givd",	# to be deleted#
#	unfished data sets#
	"dirnböck1999",#
	"brunner2011",#
	"dunzendorfer1980",#
	"greimler1996",#
	"greimler1997",#
	"grims1982",#
	"hohewand fence dta",#
	"hohewand transect dta",#
	"jakubowsky1996",#
	"monte negro dta",#
	"nußbaumer2000",#
	"pflugbeil2012",#
	"prebersee dta",#
	"ruttner1994",#
	"sobotik1998",#
	"schwarz1989",#
	"stadler1991", # to be deleted#
	"stadler1992", # to be deleted#
	"surina2004",#
#	occurrence plots only#
	"alt ems dta",#
	"adnet dta",#
	"bräumauer dta",#
	"glasenbachklamm dta",#
	"graswang dta",#
	"illschlucht dta",#
	"jansenmäuer dta",#
	"kreuzmauer dta",#
	"lichtl dta",#
	"luegstein dta",#
	"montikel dta",#
	"priental dta",#
	"reitnerkogel dta",#
	"schartenmauer dta",#
	"schieferstein dta",#
	"schrattenboden dta",#
	"wirlingwand dta",#
	"ybbs and türnitz prealps dta",#
	"zwurms meschach dta",	#
#	independent taxonomy#
	"crete dta",#
	"javakheti dta",#
	"cape hallet lichen dta",#
	"salzkammergut lichen dta",#
	"kalkalpen lichen dta",#
#	custom coverscale and taxonomy#
	"furka dta",		#
#	turboveg taxonomy (keep in sync with *mirror turboveg.R*)#
	"aspro dta",#
	"donauauen dta",#
	"enzersfeld dta",#
	"fischamend dta",	#
	"hainburg dta",#
	"kirchdorf and steyr-land dta",#
	"mountain hay meadows dta",#
	"nackter sattel dta",#
	"neusiedlersee dta",#
	"pilgersdorf dta",#
	"ravine forest dta",	#
	"reichraming dta",#
	"sankt margarethen dta",#
	"seekirchen dta",	#
	"südburgenland dta",#
	"traun and steyr and ennstal dta",#
	"vorarlberg dta",#
	"wien dta",#
	"wienerwald dta",#
	"witzelsdorf dta"#
)#
#
#	test project exclusion list#
stopifnot(all(ii %in% x))#
#
x <- x[ -match(ii, x) ]#
#
#	run build update?#
build = FALSE#
#
#	WARNING, running a Make-file will delete *all* objects in the enviroment when leaving.#
if (build) {	#
	sapply(file.path(path, x, "MakeVegsoup.R"), function (x) {#
		cat(x, "\n")#
		source(x)#
		} )#
}#
#
#	biblographic entities	#
x <- sapply(file.path(path, x), function (x) {#
	read.bib(file.path(x, "references.bib"))	#
}, simplify = FALSE)#
#
#	write bibliography#
b <- do.call("c", x)#
#
f <- names(x)#
k <- sapply(x, function (x) x[[1]]$key)#
n <- sapply(x, function (x) x[[1]]$title)#
a <- sapply(x, function (x) x[[1]]$author)#
a <- sapply(a, function (x) {#
	l <- length(x)#
	if (l > 1)#
		paste(paste(x[1:l - 1], collapse = ", "), x[l], sep = " & ")#
	else#
		as.character(x)})#
#
#	load objects#
for (i in seq_along(f)) {#
	load(file.path(f[ i ], paste0(k[ i ], ".rda")))#
	ii <- get(k[ i ])#
	ii$key = k[ i ]#
	ii$author = a[ i ]#
	ii$title = n[ i ]#
	assign(k[ i ], ii)#
}#
#
#	applied coverscales#
sapply(sapply(mget(k), coverscale), slot, "name")#
#
#	compress and bind all objects#
l <- sapply(mget(k), function (x) compress(x, retain = c("date", "observer", "location", "accuracy", "remarks", "author", "title")))#
#
sapply(l, names, simplify = FALSE)#
which(sapply(sapply(l, names, simplify = FALSE), length) != 7)#
X <- do.call("bind", l)#
#
#	key#
X$id <- row.names(X)#
#
sites(X) <- sites(X)[ , names(X) != "compress" ]#
#
#	richness#
X$richness <- richness(X, "sample")#
#
#	format date#
X$date <- as.Date(X$date)
f
k
n
a
a <- sapply(a, function (x) {#
	l <- length(x)#
	if (l > 1) {#
		paste(paste(x[1:l - 1], collapse = ", "), x[ l ], sep = " & ")#
	} else {#
		as.character(x)#
	}	#
	} )
a
#	this is a build script for all available data sets#
#	referencing to https://github.com/kardinal-eros/vegsoup-standards/tree/master/austrian%20standard%20list%202008#
#
library(vegsoup)#
library(RefManageR)#
library(knitr)#
library(rgdal)#
library(naturalsort)#
library(bibtex)#
library(stringr)#
#
rm(list = ls())#
#
path <- "~/Documents/vegsoup-data"#
x <- list.files(path)#
#
#	ignore these files#
ii <- c(#
#	other files#
	"CHANGES.md",#
	"README.md",#
	"README.png",	#
	"mirror",#
	"givd",	# to be deleted#
#	unfished data sets#
	"dirnböck1999",#
	"brunner2011",#
	"dunzendorfer1980",#
	"greimler1996",#
	"greimler1997",#
	"grims1982",#
	"hohewand fence dta",#
	"hohewand transect dta",#
	"jakubowsky1996",#
	"monte negro dta",#
	"nußbaumer2000",#
	"pflugbeil2012",#
	"prebersee dta",#
	"ruttner1994",#
	"sobotik1998",#
	"schwarz1989",#
	"stadler1991", # to be deleted#
	"stadler1992", # to be deleted#
	"surina2004",#
#	occurrence plots only#
	"alt ems dta",#
	"adnet dta",#
	"bräumauer dta",#
	"glasenbachklamm dta",#
	"graswang dta",#
	"illschlucht dta",#
	"jansenmäuer dta",#
	"kreuzmauer dta",#
	"lichtl dta",#
	"luegstein dta",#
	"montikel dta",#
	"priental dta",#
	"reitnerkogel dta",#
	"schartenmauer dta",#
	"schieferstein dta",#
	"schrattenboden dta",#
	"wirlingwand dta",#
	"ybbs and türnitz prealps dta",#
	"zwurms meschach dta",	#
#	independent taxonomy#
	"crete dta",#
	"javakheti dta",#
	"cape hallet lichen dta",#
	"salzkammergut lichen dta",#
	"kalkalpen lichen dta",#
#	custom coverscale and taxonomy#
	"furka dta",		#
#	turboveg taxonomy (keep in sync with *mirror turboveg.R*)#
	"aspro dta",#
	"donauauen dta",#
	"enzersfeld dta",#
	"fischamend dta",	#
	"hainburg dta",#
	"kirchdorf and steyr-land dta",#
	"mountain hay meadows dta",#
	"nackter sattel dta",#
	"neusiedlersee dta",#
	"pilgersdorf dta",#
	"ravine forest dta",	#
	"reichraming dta",#
	"sankt margarethen dta",#
	"seekirchen dta",	#
	"südburgenland dta",#
	"traun and steyr and ennstal dta",#
	"vorarlberg dta",#
	"wien dta",#
	"wienerwald dta",#
	"witzelsdorf dta"#
)#
#
#	test project exclusion list#
stopifnot(all(ii %in% x))#
#
x <- x[ -match(ii, x) ]#
#
#	run build update?#
build = FALSE#
#
#	WARNING, running a Make-file will delete *all* objects in the enviroment when leaving.#
if (build) {	#
	sapply(file.path(path, x, "MakeVegsoup.R"), function (x) {#
		cat(x, "\n")#
		source(x)#
		} )#
}#
#
#	biblographic entities	#
x <- sapply(file.path(path, x), function (x) {#
	read.bib(file.path(x, "references.bib"))	#
}, simplify = FALSE)#
b <- do.call("c", x)#
#
f <- names(x)#
k <- sapply(x, function (x) x[[ 1 ]]$key)#
n <- sapply(x, function (x) x[[ 1 ]]$title)#
a <- sapply(x, function (x) x[[ 1 ]]$author)#
a <- sapply(a, function (x) {#
	l <- length(x)#
	if (l > 1) {#
		paste(paste(x[ 1:l - 1 ], collapse = ", "), x[ l ], sep = " & ")#
	} else {#
		as.character(x)#
	}	#
	} )#
#
#	load objects and add bibliographic references#
for (i in seq_along(f)) {#
	cat(i, "\n")#
	load(file.path(f[ i ], paste0(k[ i ], ".rda")))#
	ii <- get(k[ i ])#
	ii$key = k[ i ]#
	ii$author = a[ i ]#
	ii$title = n[ i ]#
	assign(k[ i ], ii)#
}
#	this is a build script for all available data sets#
#	referencing to https://github.com/kardinal-eros/vegsoup-standards/tree/master/austrian%20standard%20list%202008#
#
library(vegsoup)#
library(RefManageR)#
library(knitr)#
library(rgdal)#
library(naturalsort)#
library(bibtex)#
library(stringr)#
#
rm(list = ls())#
#
path <- "~/Documents/vegsoup-data"#
x <- list.files(path)#
#
#	ignore these files#
ii <- c(#
#	other files#
	"CHANGES.md",#
	"README.md",#
	"README.png",	#
	"mirror",#
	"givd",	# to be deleted#
#	unfished data sets#
	"dirnböck1999",#
	"brunner2011",#
	"dunzendorfer1980",#
	"greimler1996",#
	"greimler1997",#
	"grims1982",#
	"hohewand fence dta",#
	"hohewand transect dta",#
	"jakubowsky1996",#
	"monte negro dta",#
	"nußbaumer2000",#
	"pflugbeil2012",#
	"prebersee dta",#
	"ruttner1994",#
	"sobotik1998",#
	"schwarz1989",#
	"stadler1991", # to be deleted#
	"stadler1992", # to be deleted#
	"surina2004",#
#	occurrence plots only#
	"alt ems dta",#
	"adnet dta",#
	"bräumauer dta",#
	"glasenbachklamm dta",#
	"graswang dta",#
	"illschlucht dta",#
	"jansenmäuer dta",#
	"kreuzmauer dta",#
	"lichtl dta",#
	"luegstein dta",#
	"montikel dta",#
	"priental dta",#
	"reitnerkogel dta",#
	"schartenmauer dta",#
	"schieferstein dta",#
	"schrattenboden dta",#
	"wirlingwand dta",#
	"ybbs and türnitz prealps dta",#
	"zwurms meschach dta",	#
#	independent taxonomy#
	"crete dta",#
	"javakheti dta",#
	"cape hallet lichen dta",#
	"salzkammergut lichen dta",#
	"kalkalpen lichen dta",#
#	custom coverscale and taxonomy#
	"furka dta",		#
#	turboveg taxonomy (keep in sync with *mirror turboveg.R*)#
	"aspro dta",#
	"donauauen dta",#
	"enzersfeld dta",#
	"fischamend dta",	#
	"hainburg dta",#
	"kirchdorf and steyr-land dta",#
	"mountain hay meadows dta",#
	"nackter sattel dta",#
	"neusiedlersee dta",#
	"pilgersdorf dta",#
	"ravine forest dta",	#
	"reichraming dta",#
	"sankt margarethen dta",#
	"seekirchen dta",	#
	"südburgenland dta",#
	"traun and steyr and ennstal dta",#
	"vorarlberg dta",#
	"wien dta",#
	"wienerwald dta",#
	"witzelsdorf dta"#
)#
#
#	test project exclusion list#
stopifnot(all(ii %in% x))#
#
x <- x[ -match(ii, x) ]#
#
#	run build update?#
build = FALSE#
#
#	WARNING, running a Make-file will delete *all* objects in the enviroment when leaving.#
if (build) {	#
	sapply(file.path(path, x, "MakeVegsoup.R"), function (x) {#
		cat(x, "\n")#
		source(x)#
		} )#
}#
#
#	biblographic entities	#
x <- sapply(file.path(path, x), function (x) {#
	read.bib(file.path(x, "references.bib"))	#
}, simplify = FALSE)#
b <- do.call("c", x)#
#
f <- names(x)#
k <- sapply(x, function (x) x[[ 1 ]]$key)#
n <- sapply(x, function (x) x[[ 1 ]]$title)#
a <- sapply(x, function (x) x[[ 1 ]]$author)#
a <- sapply(a, function (x) {#
	l <- length(x)#
	if (l > 1) {#
		paste(paste(x[ 1:l - 1 ], collapse = ", "), x[ l ], sep = " & ")#
	} else {#
		as.character(x)#
	}	#
	} )#
#
#	load objects and add bibliographic references#
for (i in seq_along(f)) {#
	load(file.path(f[ i ], paste0(k[ i ], ".rda")))#
	ii <- get(k[ i ])#
	ii$key = k[ i ]#
	ii$author = a[ i ]#
	ii$title = n[ i ]#
	assign(k[ i ], ii)#
}
?OptimStride
source("/Users/roli/Documents/vegsoup-data/mirror/mirror.R")
#	this is a build script for all available data sets#
#	referencing to https://github.com/kardinal-eros/vegsoup-standards/tree/master/austrian%20standard%20list%202008#
#
library(vegsoup)#
library(RefManageR)#
library(knitr)#
library(rgdal)#
library(naturalsort)#
library(bibtex)#
library(stringr)#
#
rm(list = ls())#
#
path <- "~/Documents/vegsoup-data"#
x <- list.files(path)#
#
#	ignore these files#
ii <- c(#
#	other files#
	"CHANGES.md",#
	"README.md",#
	"README.png",	#
	"mirror",#
	"givd",	# to be deleted#
#	unfished data sets#
	"dirnböck1999",#
	"brunner2011",#
	"dunzendorfer1980",#
	"greimler1996",#
	"greimler1997",#
	"grims1982",#
	"hohewand fence dta",#
	"hohewand transect dta",#
	"jakubowsky1996",#
	"monte negro dta",#
	"nußbaumer2000",#
	"pflugbeil2012",#
	"prebersee dta",#
	"ruttner1994",#
	"sobotik1998",#
	"schwarz1989",#
	"stadler1991", # to be deleted#
	"stadler1992", # to be deleted#
	"surina2004",#
#	occurrence plots only#
	"alt ems dta",#
	"adnet dta",#
	"bräumauer dta",#
	"glasenbachklamm dta",#
	"graswang dta",#
	"illschlucht dta",#
	"jansenmäuer dta",#
	"kreuzmauer dta",#
	"lichtl dta",#
	"luegstein dta",#
	"montikel dta",#
	"priental dta",#
	"reitnerkogel dta",#
	"schartenmauer dta",#
	"schieferstein dta",#
	"schrattenboden dta",#
	"wirlingwand dta",#
	"ybbs and türnitz prealps dta",#
	"zwurms meschach dta",	#
#	independent taxonomy#
	"crete dta",#
	"javakheti dta",#
	"cape hallet lichen dta",#
	"salzkammergut lichen dta",#
	"kalkalpen lichen dta",#
#	custom coverscale and taxonomy#
	"furka dta",		#
#	turboveg taxonomy (keep in sync with *mirror turboveg.R*)#
	"aspro dta",#
	"donauauen dta",#
	"enzersfeld dta",#
	"fischamend dta",	#
	"hainburg dta",#
	"kirchdorf and steyr-land dta",#
	"mountain hay meadows dta",#
	"nackter sattel dta",#
	"neusiedlersee dta",#
	"pilgersdorf dta",#
	"ravine forest dta",	#
	"reichraming dta",#
	"sankt margarethen dta",#
	"seekirchen dta",	#
	"südburgenland dta",#
	"traun and steyr and ennstal dta",#
	"vorarlberg dta",#
	"wien dta",#
	"wienerwald dta",#
	"witzelsdorf dta"#
)#
#
#	test project exclusion list#
stopifnot(all(ii %in% x))#
#
x <- x[ -match(ii, x) ]#
#
#	run build update?#
build = FALSE#
#
#	WARNING, running a Make-file will delete *all* objects in the enviroment when leaving.#
if (build) {	#
	sapply(file.path(path, x, "MakeVegsoup.R"), function (x) {#
		cat(x, "\n")#
		source(x)#
		} )#
}#
#
#	biblographic entities	#
x <- sapply(file.path(path, x), function (x) {#
	read.bib(file.path(x, "references.bib"))	#
}, simplify = FALSE)#
b <- do.call("c", x)#
#
f <- names(x)#
k <- sapply(x, function (x) x[[ 1 ]]$key)#
n <- sapply(x, function (x) x[[ 1 ]]$title)#
n2 <- sapply(x, function (x) x[[ 1 ]]$note)
n2
x
x[[1]]
names(x[[1]])
slotNames(x[[1]])
attributes(x[[1]])
x[[1]]
? bibentry
b
b[[1]]
names(b[[1]])
attributes(b[[1]])
class(b[[1]])
x
x <- sapply(file.path(path, x), function (x) {#
	read.bib(file.path(x, "references.bib"))	#
}, simplify = FALSE)
b <- do.call("c", x)
b
b[1]
b[[1]]
b[1]
names(b[1])
names(b[1][[1]])
b[1][[1]]
bibentry(b[1])
?bibentry
print(b[1])
bibtype(b[1])
attr(b[1])
attr(b)
attr(b[[1]])
b[[1]]
b[[1]]$bibtype
b <- do.call("c", x)
names(b)
f
names(b)
x <- sapply(file.path(path, x), function (x) {#
	read.bib(file.path(x, "references.bib"))	#
}, simplify = FALSE)#
b <- do.call("c", x)
names(b)
names(x)
p <- sapply(x, function (x) x[[ 1 ]]$bibtype)
p
length(p)
f
p
n2 <- sapply(x, function (x) x[[ 1 ]]$note)
n2
p == "Unpublished"
n2[ p == "Unpublished" ]
n[ p == "Unpublished" ] <- m[ p == "Unpublished"]
#	pre load and process biblographic entities	#
x <- sapply(file.path(path, x), function (x) {#
	read.bib(file.path(x, "references.bib"))	#
}, simplify = FALSE)#
b <- do.call("c", x)#
#
f <- names(x)#
k <- sapply(x, function (x) x[[ 1 ]]$key)#
p <- sapply(x, function (x) x[[ 1 ]]$bibtype)#
n <- sapply(x, function (x) x[[ 1 ]]$title)#
m <- sapply(x, function (x) x[[ 1 ]]$note)#
n[ p == "Unpublished" ] <- m[ p == "Unpublished"]
n
f <- names(x)#
k <- sapply(x, function (x) x[[ 1 ]]$key)#
p <- sapply(x, function (x) x[[ 1 ]]$bibtype)#
n <- sapply(x, function (x) x[[ 1 ]]$title)#
m <- sapply(x, function (x) x[[ 1 ]]$note)#
n[ p == "Unpublished" ] <- paste(n[ p == "Unpublished"], m[ p == "Unpublished"])
n
#	pre load and process biblographic entities	#
x <- sapply(file.path(path, x), function (x) {#
	read.bib(file.path(x, "references.bib"))	#
}, simplify = FALSE)#
b <- do.call("c", x)#
#
f <- names(x)#
k <- sapply(x, function (x) x[[ 1 ]]$key)#
p <- sapply(x, function (x) x[[ 1 ]]$bibtype)#
n <- sapply(x, function (x) x[[ 1 ]]$title)#
m <- sapply(x, function (x) x[[ 1 ]]$note)#
n[ p == "Unpublished" ] <- paste(n[ p == "Unpublished"], m[ p == "Unpublished"], sep = ", ")
n
n[ p == "Unpublished" ]
#	pre load and process biblographic entities	#
x <- sapply(file.path(path, x), function (x) {#
	read.bib(file.path(x, "references.bib"))	#
}, simplify = FALSE)#
b <- do.call("c", x)#
#
f <- names(x)#
k <- sapply(x, function (x) x[[ 1 ]]$key)#
p <- sapply(x, function (x) x[[ 1 ]]$bibtype)#
n <- sapply(x, function (x) x[[ 1 ]]$title)#
m <- sapply(x, function (x) x[[ 1 ]]$note)#
n[ p == "Unpublished" ] <- paste(n[ p == "Unpublished"], m[ p == "Unpublished"], sep = ". ")
n[ p == "Unpublished" ]
source("/Users/roli/Documents/vegsoup-data/mirror/mirror.R")
?layers
setMethod("compress",#
	signature(x = "Vegsoup"),#
	function (x, retain) {#
		coverscale(x) <- "pa"#
		if (!missing(retain)) {#
			j <- match(retain, names(x))#
			if (any(!is.na(j)))	{#
				x@sites <- data.frame(#
					compress = rep(TRUE, nrow(x)),#
					sites(x)[, j[!is.na(j)], drop = FALSE],#
					row.names = rownames(sites(x)))#
			}#
			else {#
				x@sites <- data.frame(#
					compress = rep(TRUE, nrow(x)),#
					cols = ncol(x),#
					row.names = rownames(sites(x)))#
			}#
		}#
		else {#
			x@sites <- data.frame(#
				compress = rep(TRUE, nrow(x)),#
				cols = ncol(sites(x)),#
				row.names = rownames(sites(x)))	 #
		}#
		x <- layers(x, collapse = "0l", aggregate(min))#
		z <- taxonomy(taxonomy(x)) #
		j <- c("abbr", "taxon", "family", "level")#
		j <- match(j, names(z))#
		z <- z[, j[!is.na(j)]]#
#
		x@taxonomy <- taxonomy(z)#
	return(x)	#
	}#
)
source("/Users/roli/Documents/vegsoup/pkg/R/compress.R")
#	this is a build script for all available data sets#
#	referencing to https://github.com/kardinal-eros/vegsoup-standards/tree/master/austrian%20standard%20list%202008#
#
library(vegsoup)#
library(RefManageR)#
library(knitr)#
library(rgdal)#
library(naturalsort)#
library(bibtex)#
library(stringr)#
#
rm(list = ls())#
#
path <- "~/Documents/vegsoup-data"#
x <- list.files(path)#
#
#	ignore these files#
ii <- c(#
#	other files#
	"CHANGES.md",#
	"README.md",#
	"README.png",	#
	"mirror",#
	"givd",	# to be deleted#
#	unfished data sets#
	"dirnböck1999",#
	"brunner2011",#
	"dunzendorfer1980",#
	"greimler1996",#
	"greimler1997",#
	"grims1982",#
	"hohewand fence dta",#
	"hohewand transect dta",#
	"jakubowsky1996",#
	"monte negro dta",#
	"nußbaumer2000",#
	"pflugbeil2012",#
	"prebersee dta",#
	"ruttner1994",#
	"sobotik1998",#
	"schwarz1989",#
	"stadler1991", # to be deleted#
	"stadler1992", # to be deleted#
	"surina2004",#
#	occurrence plots only#
	"alt ems dta",#
	"adnet dta",#
	"bräumauer dta",#
	"glasenbachklamm dta",#
	"graswang dta",#
	"illschlucht dta",#
	"jansenmäuer dta",#
	"kreuzmauer dta",#
	"lichtl dta",#
	"luegstein dta",#
	"montikel dta",#
	"priental dta",#
	"reitnerkogel dta",#
	"schartenmauer dta",#
	"schieferstein dta",#
	"schrattenboden dta",#
	"wirlingwand dta",#
	"ybbs and türnitz prealps dta",#
	"zwurms meschach dta",	#
#	independent taxonomy#
	"crete dta",#
	"javakheti dta",#
	"cape hallet lichen dta",#
	"salzkammergut lichen dta",#
	"kalkalpen lichen dta",#
#	custom coverscale and taxonomy#
	"furka dta",		#
#	turboveg taxonomy (keep in sync with *mirror turboveg.R*)#
	"aspro dta",#
	"donauauen dta",#
	"enzersfeld dta",#
	"fischamend dta",	#
	"hainburg dta",#
	"kirchdorf and steyr-land dta",#
	"mountain hay meadows dta",#
	"nackter sattel dta",#
	"neusiedlersee dta",#
	"pilgersdorf dta",#
	"ravine forest dta",	#
	"reichraming dta",#
	"sankt margarethen dta",#
	"seekirchen dta",	#
	"südburgenland dta",#
	"traun and steyr and ennstal dta",#
	"vorarlberg dta",#
	"wien dta",#
	"wienerwald dta",#
	"witzelsdorf dta"#
)#
#
#	test project exclusion list#
stopifnot(all(ii %in% x))#
#
x <- x[ -match(ii, x) ]#
#
#	run build update?#
build = FALSE#
#
#	WARNING, running a Make-file will#
#	delete *all* objects in the enviroment when leaving.#
if (build) {	#
	sapply(file.path(path, x, "MakeVegsoup.R"), function (x) {#
		cat(x, "\n")#
		source(x)#
		} )#
}#
#
#	pre load and process biblographic entities	#
x <- sapply(file.path(path, x), function (x) {#
	read.bib(file.path(x, "references.bib"))	#
}, simplify = FALSE)#
b <- do.call("c", x)#
#
f <- names(x)#
k <- sapply(x, function (x) x[[ 1 ]]$key)#
p <- sapply(x, function (x) x[[ 1 ]]$bibtype)#
n <- sapply(x, function (x) x[[ 1 ]]$title)#
m <- sapply(x, function (x) x[[ 1 ]]$note)#
n[ p == "Unpublished" ] <- paste(n[ p == "Unpublished"], m[ p == "Unpublished"], sep = ". ")#
a <- sapply(x, function (x) x[[ 1 ]]$author)#
a <- sapply(a, function (x) {#
	l <- length(x)#
	if (l > 1) {#
		paste(paste(x[ 1:l - 1 ], collapse = ", "), x[ l ], sep = " & ")#
	} else {#
		as.character(x)#
	}	#
	} )#
#	load objects and add bibliographic references#
for (i in seq_along(f)) {#
	load(file.path(f[ i ], paste0(k[ i ], ".rda")))#
	ii <- get(k[ i ])#
	ii$key = k[ i ]#
	ii$author = a[ i ]#
	ii$title = n[ i ]#
	ii$bibtype <- p[ i ]#
	assign(k[ i ], ii)#
}#
#
#	applied coverscales#
sapply(sapply(mget(k), coverscale), slot, "name")#
#
#	compress and bind all objects#
l <- sapply(mget(k), function (x) compress(x,#
	retain = c("date", "observer", "location",#
		"accuracy", "remarks", "author", "title")))#
#
sapply(l, names, simplify = FALSE)#
which(sapply(sapply(l, names, simplify = FALSE), length) != 7)#
X <- do.call("bind", l)#
#
#	key#
X$id <- row.names(X)#
#
sites(X) <- sites(X)[ , names(X) != "compress" ]#
#
#	richness#
X$richness <- richness(X, "sample")#
#
#	format date#
X$date <- as.Date(X$date)#
#
test <- any(is.na(X$date))#
#
if (test) {#
	message("some dates are missing")#
}#
#
#	extract year#
X$year <- as.integer(sapply(str_split(X$date, "-"), head, 1))#
#
#	groome remarks to caintain.only date related comment#
X$remarks <- as.character(X$remarks)#
X$remarks[ -grep("date", X$remarks) ] <- NA#
#
#	flag literature data#
X$published <- FALSE#
X$published[grep(":", rownames(X), fixed = TRUE)] <- TRUE#
table(X$published)#
#
#	save R image file#
save(X, file = file.path(path, "mirror", "mirror.rda"))#
#
plot(X)
plot(X)
hist(X$year[ !X$published ])
hist(Year = X$year[ !X$published ])
hist(x = Year = X$year[ !X$published ])
Year = X$year[ !X$published ]#
hist(Year)
hist(X$year[ !X$published ], main = "Year")
hist(X$year[ !X$published ], main = "", sub = "Year")
hist(X$year[ !X$published ], main = "", xlab = "Year")
range(X$year[ !X$published ])
seq(range(X$year[ !X$published ]))
range(X$year[ !X$published ])
?hist
y <- X$year[ !X$published ]
y
range(y)
seq(min(y), max(y), by = 1)
hist(y, main = "", xlab = "Year",#
	breaks = seq(min(y) + 1, max(y), by = 1)
)
hist(y, main = "", xlab = "Year",#
	breaks = seq(min(y), max(y), by = 1))
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]
X
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]#
#
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")
Y
X
Y
file <- file.path(path, "taxonomy.csv")
file
XZ <- SpeciesTaxonomy(X, file.y = file)
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]#
#
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")#
#
file <- file.path(path, "taxonomy.csv")#
#	promote to class "SpeciesTaxonomy"#
XZ <- SpeciesTaxonomy(X, file.y = file)
XZ <- SpeciesTaxonomy(X, file.y = file, sep = ",")
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]#
#
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")#
#
file <- file.path(path, "taxonomy.csv")#
#	promote to class "SpeciesTaxonomy"#
XZ <- SpeciesTaxonomy(X, file.y = file, sep = ",")
X
Taxonmy(file, sep = ",")
taxonmy(file, sep = ",")
taxonomy(file, sep = ",")
taxonomy(file, sep = ",")$abbr
?amke.anmes
?amke.names
?make.names
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]#
#
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")#
#
file <- file.path(path, "taxonomy.csv")#
Z <- taxonomy(file, sep = ",")$abbr#
#	promote to class "SpeciesTaxonomy"#
XZ <- SpeciesTaxonomy(X, Z)
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]#
#
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")#
#
file <- file.path(path, "taxonomy.csv")#
Z <- taxonomy(file, sep = ",")#
#	promote to class "SpeciesTaxonomy"#
XZ <- SpeciesTaxonomy(X, Z)
make.names(1, 765, 1000)
make.names(c(1, 765, 1000))
source("/Users/roli/Documents/vegsoup/pkg/R/Class-Taxonomy.R")
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]#
#
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")#
#
file <- file.path(path, "taxonomy.csv")#
Z <- taxonomy(file, sep = ",")#
#	promote to class "SpeciesTaxonomy"#
XZ <- SpeciesTaxonomy(X, Z)
source("/Users/roli/Documents/vegsoup/pkg/R/Class-Species.R")
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]#
#
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")#
#
file <- file.path(path, "taxonomy.csv")#
Z <- taxonomy(file, sep = ",")#
#	promote to class "SpeciesTaxonomy"#
XZ <- SpeciesTaxonomy(X, Z)
XZ
library(vegit)
?vegit
?taxonomy
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]#
#
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")#
#
file <- file.path(path, "taxonomy.csv")#
Z <- taxonomy(file, sep = ",")#
#	promote to class "SpeciesTaxonomy"#
XZ <- SpeciesTaxonomy(X, Z)
XZ
match(species(XZ)$abbr, taxonomy(XZ)$abbr)
xz[ match(species(XZ)$abbr, taxonomy(XZ)$abbr), ]
XZ[ match(species(XZ)$abbr, taxonomy(XZ)$abbr), ]
taxonomy(XZ[ match(species(XZ)$abbr, taxonomy(XZ)$abbr), ])
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]#
#
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")#
#
file <- "~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv"#
#	promote to class "SpeciesTaxonomy"#
XZ <- SpeciesTaxonomy(X, file.y = file)
unique(X$cov)
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]#
#
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")#
#
file <- "~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv"#
#	promote to class "SpeciesTaxonomy"#
XZ <- SpeciesTaxonomy(X, file.y = file)#
#
#	build "Vegsoup" object#
obj <- Vegsoup(XZ, Y, coverscale = "braun.blanquet")
unique(X$cov)
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]#
#
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")#
#
file <- "~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv"#
#	promote to class "SpeciesTaxonomy"#
XZ <- SpeciesTaxonomy(X, file.y = file)#
#
#	build "Vegsoup" object#
obj <- Vegsoup(XZ, Y, coverscale = "braun.blanquet")
unique(X$cov)
?Coverscale
Coverscale()
Coverscale("pfadenhauer")
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]#
#
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")#
#
file <- "~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv"#
#	promote to class "SpeciesTaxonomy"#
XZ <- SpeciesTaxonomy(X, file.y = file)#
#
#	build "Vegsoup" object#
obj <- Vegsoup(XZ, Y, coverscale = "pfadenhauer")
Coverscale("pfadenhauer")
unique(X$cov)
sort(unique(X$cov))
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]#
#
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")#
#
file <- "~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv"#
#	promote to class "SpeciesTaxonomy"#
XZ <- SpeciesTaxonomy(X, file.y = file)#
#
#	build "Vegsoup" object#
obj <- Vegsoup(XZ, Y, coverscale = "pfadenhauer")
obj
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]#
#
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")#
#
file <- "~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv"#
#	promote to class "SpeciesTaxonomy"#
XZ <- SpeciesTaxonomy(X, file.y = file)#
#
#	build "Vegsoup" object#
obj <- Vegsoup(XZ, Y, coverscale = "pfadenhauer")
unique(X$cov)
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]#
#
file <- file.path(path, "sites wide.csv")#
#	promote to class "Sites"#
Y <- stackSites(file = file, sep = ",", dec = ".")#
#
file <- "~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv"#
#	promote to class "SpeciesTaxonomy"#
XZ <- SpeciesTaxonomy(X, file.y = file)#
#
#	build "Vegsoup" object#
obj <- Vegsoup(XZ, Y, coverscale = "pfadenhauer")
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/kaiser2005"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "species.csv")#
#	promote to class "Species"#
X <- species(file, sep = ",")[, 1:4]
X
unique(X$cov)
source("/Users/roli/Documents/vegsoup-data/mirror/mirror.R")
#	this is a build script for all available data sets#
#	referencing to https://github.com/kardinal-eros/vegsoup-standards/tree/master/austrian%20standard%20list%202008#
#
library(vegsoup)#
library(RefManageR)#
library(knitr)#
library(rgdal)#
library(naturalsort)#
library(bibtex)#
library(stringr)#
#
rm(list = ls())#
#
path <- "~/Documents/vegsoup-data"#
x <- list.files(path)#
#
#	files to ignore#
ii <- c(#
#	other files#
	"CHANGES.md",#
	"README.md",#
	"README.png",	#
	"mirror",#
	"givd",	# to be deleted#
#	unfished data sets#
	"dirnböck1999",#
	"brunner2011",#
	"dunzendorfer1980",#
	"greimler1996",#
	"greimler1997",#
	"grims1982",#
	"hohewand fence dta",#
	"hohewand transect dta",#
	"jakubowsky1996",#
	"monte negro dta",#
	"nußbaumer2000",#
	"pflugbeil2012",#
	"ruttner1994",#
	"sobotik1998",#
	"schwarz1989",#
	"stadler1991", # to be deleted#
	"stadler1992", # to be deleted#
	"surina2004",#
#	occurrence plots only#
	"alt ems dta",#
	"adnet dta",#
	"bräumauer dta",#
	"glasenbachklamm dta",#
	"graswang dta",#
	"illschlucht dta",#
	"jansenmäuer dta",#
	"kreuzmauer dta",#
	"lichtl dta",#
	"luegstein dta",#
	"montikel dta",#
	"priental dta",#
	"reitnerkogel dta",#
	"schartenmauer dta",#
	"schieferstein dta",#
	"schrattenboden dta",#
	"wirlingwand dta",#
	"ybbs and türnitz prealps dta",#
	"zwurms meschach dta",	#
#	independent taxonomy#
	"crete dta",#
	"javakheti dta",#
	"cape hallet lichen dta",#
	"salzkammergut lichen dta",#
	"kalkalpen lichen dta",#
#	custom coverscale and taxonomy#
	"furka dta",		#
#	turboveg taxonomy (keep in sync with *mirror turboveg.R*)#
	"aspro dta",#
	"donauauen dta",#
	"enzersfeld dta",#
	"fischamend dta",	#
	"hainburg dta",#
	"kirchdorf and steyr-land dta",#
	"mountain hay meadows dta",#
	"nackter sattel dta",#
	"neusiedlersee dta",#
	"pilgersdorf dta",#
	"ravine forest dta",	#
	"reichraming dta",#
	"sankt margarethen dta",#
	"seekirchen dta",	#
	"südburgenland dta",#
	"traun and steyr and ennstal dta",#
	"vorarlberg dta",#
	"wien dta",#
	"wienerwald dta",#
	"witzelsdorf dta"#
)#
#
#	test project exclusion list#
stopifnot(all(ii %in% x))#
#
x <- x[ -match(ii, x) ]
sapply(file.path(path, x, "MakeVegsoup.R"), function (x) {#
		cat(x, "\n")#
		source(x)#
		} )
#	this is a build script for all available data sets#
#	referencing to https://github.com/kardinal-eros/vegsoup-standards/tree/master/austrian%20standard%20list%202008#
#
library(vegsoup)#
library(RefManageR)#
library(knitr)#
library(rgdal)#
library(naturalsort)#
library(bibtex)#
library(stringr)#
#
rm(list = ls())#
#
path <- "~/Documents/vegsoup-data"#
x <- list.files(path)#
#
#	files to ignore#
ii <- c(#
#	other files#
	"CHANGES.md",#
	"README.md",#
	"README.png",	#
	"mirror",#
	"givd",	# to be deleted#
#	unfished data sets#
	"dirnböck1999",#
	"brunner2011",#
	"dunzendorfer1980",#
	"greimler1996",#
	"greimler1997",#
	"grims1982",#
	"hohewand fence dta",#
	"hohewand transect dta",#
	"jakubowsky1996",#
	"monte negro dta",#
	"nußbaumer2000",#
	"pflugbeil2012",#
	"ruttner1994",#
	"sobotik1998",#
	"schwarz1989",#
	"stadler1991", # to be deleted#
	"stadler1992", # to be deleted#
	"surina2004",#
#	occurrence plots only#
	"alt ems dta",#
	"adnet dta",#
	"bräumauer dta",#
	"glasenbachklamm dta",#
	"graswang dta",#
	"illschlucht dta",#
	"jansenmäuer dta",#
	"kreuzmauer dta",#
	"lichtl dta",#
	"luegstein dta",#
	"montikel dta",#
	"priental dta",#
	"reitnerkogel dta",#
	"schartenmauer dta",#
	"schieferstein dta",#
	"schrattenboden dta",#
	"wirlingwand dta",#
	"ybbs and türnitz prealps dta",#
	"zwurms meschach dta",	#
#	independent taxonomy#
	"crete dta",#
	"javakheti dta",#
	"cape hallet lichen dta",#
	"salzkammergut lichen dta",#
	"kalkalpen lichen dta",#
#	custom coverscale and taxonomy#
	"furka dta",		#
#	turboveg taxonomy (keep in sync with *mirror turboveg.R*)#
	"aspro dta",#
	"donauauen dta",#
	"enzersfeld dta",#
	"fischamend dta",	#
	"hainburg dta",#
	"kirchdorf and steyr-land dta",#
	"mountain hay meadows dta",#
	"nackter sattel dta",#
	"neusiedlersee dta",#
	"pilgersdorf dta",#
	"ravine forest dta",	#
	"reichraming dta",#
	"sankt margarethen dta",#
	"seekirchen dta",	#
	"südburgenland dta",#
	"traun and steyr and ennstal dta",#
	"vorarlberg dta",#
	"wien dta",#
	"wienerwald dta",#
	"witzelsdorf dta"#
)#
#
#	test project exclusion list#
stopifnot(all(ii %in% x))#
#
x <- x[ -match(ii, x) ]#
#
#	run build update?#
build = FALSE
sapply(file.path(path, x, "MakeVegsoup.R"), function (x) {#
		cat(x, "\n")#
		source(x)#
		} )
require(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/erschbamer1992"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "Erschbamer1992Tab4.txt")#
#
# read digitized table#
x1 <- read.verbatim(file, colnames = "Aufnahme Nr.")#
#
# extract header (sites) data from VegsoupVerbatim object#
y1 <- header(x1)#
#
# translate and groome names#
names(y1) <- c("plot", "altitude", "aspect", "slope", "cover", "pH", "block")#
#
# promote to Sites object	#
y1$plot <- rownames(y1) # header returns plot names as rownames #
y1 <- stackSites(y1, schema = "plot")#
#
# promote table body to Species object#
x1 <- species(x1)#
#
# get species from table footer#
# a listing of species not covered by the main table#
# the source does not supply any abundance values, we assume '+'#
file <- file.path(path, "Erschbamer1992Tab4Tablefooter.txt")#
x2 <- castFooter(file, species.first = TRUE, abundance.first = NA,#
                 abundance = "+")#
x2$plot <- sprintf("%03d", as.numeric(x2$plot))#
#
# bind species in table footer with main table#
X <- vegsoup::bind(x1, x2)
#   additional sites data including coordinates as a tab delimited file#
file <- file.path(path, "Erschbamer1992Tab4Locations.txt")#
y2 <- read.delim(file, colClasses = "character")#
head(y2)#
# add leading zeros#
y2$nr <- sprintf("%03d", as.numeric(y2$nr))#
# promote to class "Sites"#
y2 <- stackSites(y2, schema = "nr")#
#
#	bind with sites data from table header#
Y <- vegsoup::bind(y1, y2)
# taxonomy reference list#
file <- "~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv"#
Z <- taxonomy(file, sep = ";")
# groome abundance scale codes to fit the standard#
# of the extended Braun-Blanquet scale used in the origional publication#
X$cov <- gsub("m", "2m", X$cov)#
X$cov <- gsub("a", "2a", X$cov)#
X$cov <- gsub("b", "2b", X$cov)#
#
# promote to class "Vegsoup"#
obj <- Vegsoup(X, Y, Z, coverscale = "braun.blanquet")
SpeciesTaxonomy(X, Z)
require(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/erschbamer1992"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
file <- file.path(path, "Erschbamer1992Tab4.txt")#
#
# read digitized table#
x1 <- read.verbatim(file, colnames = "Aufnahme Nr.")#
#
# extract header (sites) data from VegsoupVerbatim object#
y1 <- header(x1)#
#
# translate and groome names#
names(y1) <- c("plot", "altitude", "aspect", "slope", "cover", "pH", "block")#
#
# promote to Sites object	#
y1$plot <- rownames(y1) # header returns plot names as rownames #
y1 <- stackSites(y1, schema = "plot")#
#
# promote table body to Species object#
x1 <- species(x1)#
#
# get species from table footer#
# a listing of species not covered by the main table#
# the source does not supply any abundance values, we assume '+'#
file <- file.path(path, "Erschbamer1992Tab4Tablefooter.txt")#
x2 <- castFooter(file, species.first = TRUE, abundance.first = NA,#
                 abundance = "+")#
x2$plot <- sprintf("%03d", as.numeric(x2$plot))#
#
# bind species in table footer with main table#
X <- vegsoup::bind(x1, x2)#
#
#   additional sites data including coordinates as a tab delimited file#
file <- file.path(path, "Erschbamer1992Tab4Locations.txt")#
y2 <- read.delim(file, colClasses = "character")#
head(y2)#
# add leading zeros#
y2$nr <- sprintf("%03d", as.numeric(y2$nr))#
# promote to class "Sites"#
y2 <- stackSites(y2, schema = "nr")#
#
#	bind with sites data from table header#
Y <- vegsoup::bind(y1, y2)#
#
# taxonomy reference list#
file <- "~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv"#
Z <- taxonomy(file, sep = ";")#
#
# groome abundance scale codes to fit the standard#
# of the extended Braun-Blanquet scale used in the origional publication#
X$cov <- gsub("m", "2m", X$cov)#
X$cov <- gsub("a", "2a", X$cov)#
X$cov <- gsub("b", "2b", X$cov)#
#
XZ <- SpeciesTaxonomy(X, Z)
#	run from shell#
#	R -f TestForUniqueAbbr.R #
#
x <- read.csv2("~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv", stringsAsFactors = FALSE)#
#
test <- df$abbr[ duplicated(x$abbr) ]#
#
print(test)#
#
test <- x$taxon[ duplicated(x$taxon) ]#
#
print(test)
#	run from shell#
#	R -f TestForUniqueAbbr.R #
#
x <- read.csv2("~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv", stringsAsFactors = FALSE)#
#
test <- df$abbr[ duplicated(x$abbr) ]
source("/Users/roli/Documents/vegsoup-standards/austrian standard list 2008/TestForUniqueAbbr.R")
source("/Users/roli/Documents/vegsoup-data/erschbamer1992/MakeVegsoup.R")
source("/Users/roli/Documents/vegsoup-data/mirror/mirror.R")
#	this is a build script for all available data sets#
#	referencing to https://github.com/kardinal-eros/vegsoup-standards/tree/master/austrian%20standard%20list%202008#
#
library(vegsoup)#
library(RefManageR)#
library(knitr)#
library(rgdal)#
library(naturalsort)#
library(bibtex)#
library(stringr)#
#
rm(list = ls())#
#
path <- "~/Documents/vegsoup-data"#
x <- list.files(path)#
#
#	files to ignore#
ii <- c(#
#	other files#
	"CHANGES.md",#
	"README.md",#
	"README.png",	#
	"mirror",#
	"givd",	# to be deleted#
#	unfished data sets#
	"dirnböck1999",#
	"brunner2011",#
	"dunzendorfer1980",#
	"greimler1996",#
	"greimler1997",#
	"grims1982",#
	"hohewand fence dta",#
	"hohewand transect dta",#
	"jakubowsky1996",#
	"monte negro dta",#
	"nußbaumer2000",#
	"pflugbeil2012",#
	"ruttner1994",#
	"sobotik1998",#
	"schwarz1989",#
	"stadler1991", # to be deleted#
	"stadler1992", # to be deleted#
	"surina2004",#
#	occurrence plots only#
	"alt ems dta",#
	"adnet dta",#
	"bräumauer dta",#
	"glasenbachklamm dta",#
	"graswang dta",#
	"illschlucht dta",#
	"jansenmäuer dta",#
	"kreuzmauer dta",#
	"lichtl dta",#
	"luegstein dta",#
	"montikel dta",#
	"priental dta",#
	"reitnerkogel dta",#
	"schartenmauer dta",#
	"schieferstein dta",#
	"schrattenboden dta",#
	"wirlingwand dta",#
	"ybbs and türnitz prealps dta",#
	"zwurms meschach dta",	#
#	independent taxonomy#
	"crete dta",#
	"javakheti dta",#
	"cape hallet lichen dta",#
	"salzkammergut lichen dta",#
	"kalkalpen lichen dta",#
#	custom coverscale and taxonomy#
	"furka dta",		#
#	turboveg taxonomy (keep in sync with *mirror turboveg.R*)#
	"aspro dta",#
	"donauauen dta",#
	"enzersfeld dta",#
	"fischamend dta",	#
	"hainburg dta",#
	"kirchdorf and steyr-land dta",#
	"mountain hay meadows dta",#
	"nackter sattel dta",#
	"neusiedlersee dta",#
	"pilgersdorf dta",#
	"ravine forest dta",	#
	"reichraming dta",#
	"sankt margarethen dta",#
	"seekirchen dta",	#
	"südburgenland dta",#
	"traun and steyr and ennstal dta",#
	"vorarlberg dta",#
	"wien dta",#
	"wienerwald dta",#
	"witzelsdorf dta"#
)#
#
#	test project exclusion list#
stopifnot(all(ii %in% x))#
#
x <- x[ -match(ii, x) ]#
#
#	run build update?#
build = FALSE
sapply(file.path(path, x, "MakeVegsoup.R"), function (x) {#
		cat(x, "\n")#
		source(x)#
		} )
#	this is a build script for all available data sets#
#	referencing to https://github.com/kardinal-eros/vegsoup-standards/tree/master/austrian%20standard%20list%202008#
#
library(vegsoup)#
library(RefManageR)#
library(knitr)#
library(rgdal)#
library(naturalsort)#
library(bibtex)#
library(stringr)#
#
rm(list = ls())#
#
path <- "~/Documents/vegsoup-data"#
x <- list.files(path)#
#
#	files to ignore#
ii <- c(#
#	other files#
	"CHANGES.md",#
	"README.md",#
	"README.png",	#
	"mirror",#
	"givd",	# to be deleted#
#	unfished data sets#
	"dirnböck1999",#
	"brunner2011",#
	"dunzendorfer1980",#
	"greimler1996",#
	"greimler1997",#
	"grims1982",#
	"hohewand fence dta",#
	"hohewand transect dta",#
	"jakubowsky1996",#
	"monte negro dta",#
	"nußbaumer2000",#
	"pflugbeil2012",#
	"ruttner1994",#
	"sobotik1998",#
	"schwarz1989",#
	"stadler1991", # to be deleted#
	"stadler1992", # to be deleted#
	"surina2004",#
#	occurrence plots only#
	"alt ems dta",#
	"adnet dta",#
	"bräumauer dta",#
	"glasenbachklamm dta",#
	"graswang dta",#
	"illschlucht dta",#
	"jansenmäuer dta",#
	"kreuzmauer dta",#
	"lichtl dta",#
	"luegstein dta",#
	"montikel dta",#
	"priental dta",#
	"reitnerkogel dta",#
	"schartenmauer dta",#
	"schieferstein dta",#
	"schrattenboden dta",#
	"wirlingwand dta",#
	"ybbs and türnitz prealps dta",#
	"zwurms meschach dta",	#
#	independent taxonomy#
	"crete dta",#
	"javakheti dta",#
	"cape hallet lichen dta",#
	"salzkammergut lichen dta",#
	"kalkalpen lichen dta",#
#	custom coverscale and taxonomy#
	"furka dta",		#
#	turboveg taxonomy (keep in sync with *mirror turboveg.R*)#
	"aspro dta",#
	"donauauen dta",#
	"enzersfeld dta",#
	"fischamend dta",	#
	"hainburg dta",#
	"kirchdorf and steyr-land dta",#
	"mountain hay meadows dta",#
	"nackter sattel dta",#
	"neusiedlersee dta",#
	"pilgersdorf dta",#
	"ravine forest dta",	#
	"reichraming dta",#
	"sankt margarethen dta",#
	"seekirchen dta",	#
	"südburgenland dta",#
	"traun and steyr and ennstal dta",#
	"vorarlberg dta",#
	"wien dta",#
	"wienerwald dta",#
	"witzelsdorf dta"#
)#
#
#	test project exclusion list#
stopifnot(all(ii %in% x))#
#
x <- x[ -match(ii, x) ]#
#
#	run build update?#
build = T#
#
#	WARNING, running a Make-file will#
#	delete *all* objects in the enviroment when leaving.#
if (build) {	#
	sapply(file.path(path, x, "MakeVegsoup.R"), function (x) {#
		cat(x, "\n")#
		source(x)#
		} )#
}
library(vegit)#
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/gruber2006"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
#	reference list#
Z <- read.csv2("~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv",#
	colClasses = "character")#
#
#	 ... and read authored translate list#
z <- read.csv(file.path(path, "translate.csv"),#
	colClasses = "character")#
#
file <- file.path(path, "Gruber2006.csv")#
X <- stackSpecies(file = file, schema = c("taxon", "layer"), sep = ",")#
species(X) <- join(z, Z)#
#
#	transform cover scalae#
X$cov[X$cov == "1"] <- "+"#
#
file <- file.path(path, "Gruber2006Locations.csv")#
Y <- stackSites(file = file, sep = ",")#
#
XZ <- SpeciesTaxonomy(X, Z)
library(vegit)#
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/gruber2006"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
#	reference list#
Z <- read.csv2("~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv",#
	colClasses = "character")#
#
#	 ... and read authored translate list#
z <- read.csv(file.path(path, "translate.csv"),#
	colClasses = "character")#
#
file <- file.path(path, "Gruber2006.csv")#
X <- stackSpecies(file = file, schema = c("taxon", "layer"), sep = ",")#
species(X) <- join(z, Z)
z
Z
join(z, Z)
?join
head(z)
head(Z)
match(x$matched.taxon, Z$taxon)
library(vegit)#
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/gruber2006"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
#	reference list#
Z <- read.csv2("~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv",#
	colClasses = "character")#
#
#	 ... and read authored translate list#
z <- read.csv(file.path(path, "translate.csv"),#
	colClasses = "character")#
#
file <- file.path(path, "Gruber2006.csv")#
X <- stackSpecies(file = file, schema = c("taxon", "layer"), sep = ",")#
match(z$matched.taxon, Z$taxon)
source("/Users/roli/Documents/vegsoup-data/gruber2006/MakeVegsoup.R")
#	this is a build script for all available data sets#
#	referencing to https://github.com/kardinal-eros/vegsoup-standards/tree/master/austrian%20standard%20list%202008#
#
library(vegsoup)#
library(RefManageR)#
library(knitr)#
library(rgdal)#
library(naturalsort)#
library(bibtex)#
library(stringr)#
#
rm(list = ls())#
#
path <- "~/Documents/vegsoup-data"#
x <- list.files(path)#
#
#	files to ignore#
ii <- c(#
#	other files#
	"CHANGES.md",#
	"README.md",#
	"README.png",	#
	"mirror",#
	"givd",	# to be deleted#
#	unfished data sets#
	"dirnböck1999",#
	"brunner2011",#
	"dunzendorfer1980",#
	"greimler1996",#
	"greimler1997",#
	"grims1982",#
	"hohewand fence dta",#
	"hohewand transect dta",#
	"jakubowsky1996",#
	"monte negro dta",#
	"nußbaumer2000",#
	"pflugbeil2012",#
	"ruttner1994",#
	"sobotik1998",#
	"schwarz1989",#
	"stadler1991", # to be deleted#
	"stadler1992", # to be deleted#
	"surina2004",#
#	occurrence plots only#
	"alt ems dta",#
	"adnet dta",#
	"bräumauer dta",#
	"glasenbachklamm dta",#
	"graswang dta",#
	"illschlucht dta",#
	"jansenmäuer dta",#
	"kreuzmauer dta",#
	"lichtl dta",#
	"luegstein dta",#
	"montikel dta",#
	"priental dta",#
	"reitnerkogel dta",#
	"schartenmauer dta",#
	"schieferstein dta",#
	"schrattenboden dta",#
	"wirlingwand dta",#
	"ybbs and türnitz prealps dta",#
	"zwurms meschach dta",	#
#	independent taxonomy#
	"crete dta",#
	"javakheti dta",#
	"cape hallet lichen dta",#
	"salzkammergut lichen dta",#
	"kalkalpen lichen dta",#
#	custom coverscale and taxonomy#
	"furka dta",		#
#	turboveg taxonomy (keep in sync with *mirror turboveg.R*)#
	"aspro dta",#
	"donauauen dta",#
	"enzersfeld dta",#
	"fischamend dta",	#
	"hainburg dta",#
	"kirchdorf and steyr-land dta",#
	"mountain hay meadows dta",#
	"nackter sattel dta",#
	"neusiedlersee dta",#
	"pilgersdorf dta",#
	"ravine forest dta",	#
	"reichraming dta",#
	"sankt margarethen dta",#
	"seekirchen dta",	#
	"südburgenland dta",#
	"traun and steyr and ennstal dta",#
	"vorarlberg dta",#
	"wien dta",#
	"wienerwald dta",#
	"witzelsdorf dta"#
)#
#
#	test project exclusion list#
stopifnot(all(ii %in% x))#
#
x <- x[ -match(ii, x) ]#
#
#	run build update?#
build = T#
#
#	WARNING, running a Make-file will#
#	delete *all* objects in the enviroment when leaving.#
if (build) {	#
	sapply(file.path(path, x, "MakeVegsoup.R"), function (x) {#
		cat(x, "\n")#
		source(x)#
		} )#
}
#	this is a build script for all available data sets#
#	referencing to https://github.com/kardinal-eros/vegsoup-standards/tree/master/austrian%20standard%20list%202008#
#
library(vegsoup)#
library(RefManageR)#
library(knitr)#
library(rgdal)#
library(naturalsort)#
library(bibtex)#
library(stringr)#
#
rm(list = ls())#
#
path <- "~/Documents/vegsoup-data"#
x <- list.files(path)#
#
#	files to ignore#
ii <- c(#
#	other files#
	"CHANGES.md",#
	"README.md",#
	"README.png",	#
	"mirror",#
	"givd",	# to be deleted#
#	unfished data sets#
	"dirnböck1999",#
	"brunner2011",#
	"dunzendorfer1980",#
	"greimler1996",#
	"greimler1997",#
	"grims1982",#
	"hohewand fence dta",#
	"hohewand transect dta",#
	"jakubowsky1996",#
	"monte negro dta",#
	"nußbaumer2000",#
	"pflugbeil2012",#
	"ruttner1994",#
	"sobotik1998",#
	"schwarz1989",#
	"stadler1991", # to be deleted#
	"stadler1992", # to be deleted#
	"surina2004",#
#	occurrence plots only#
	"alt ems dta",#
	"adnet dta",#
	"bräumauer dta",#
	"glasenbachklamm dta",#
	"graswang dta",#
	"illschlucht dta",#
	"jansenmäuer dta",#
	"kreuzmauer dta",#
	"lichtl dta",#
	"luegstein dta",#
	"montikel dta",#
	"priental dta",#
	"reitnerkogel dta",#
	"schartenmauer dta",#
	"schieferstein dta",#
	"schrattenboden dta",#
	"wirlingwand dta",#
	"ybbs and türnitz prealps dta",#
	"zwurms meschach dta",	#
#	independent taxonomy#
	"crete dta",#
	"javakheti dta",#
	"cape hallet lichen dta",#
	"salzkammergut lichen dta",#
	"kalkalpen lichen dta",#
#	custom coverscale and taxonomy#
	"furka dta",		#
#	turboveg taxonomy (keep in sync with *mirror turboveg.R*)#
	"aspro dta",#
	"donauauen dta",#
	"enzersfeld dta",#
	"fischamend dta",	#
	"hainburg dta",#
	"kirchdorf and steyr-land dta",#
	"mountain hay meadows dta",#
	"nackter sattel dta",#
	"neusiedlersee dta",#
	"pilgersdorf dta",#
	"ravine forest dta",	#
	"reichraming dta",#
	"sankt margarethen dta",#
	"seekirchen dta",	#
	"südburgenland dta",#
	"traun and steyr and ennstal dta",#
	"vorarlberg dta",#
	"wien dta",#
	"wienerwald dta",#
	"witzelsdorf dta"#
)#
#
#	test project exclusion list#
stopifnot(all(ii %in% x))#
#
x <- x[ -match(ii, x) ]
x
source("/Users/roli/Documents/vegsoup-data/steyr and ennstal dta/MakeVegsoup.R")
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/steyr und ennstal dta"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/steyr and ennstal dta"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key
source("/Users/roli/Documents/vegsoup-data/steyr and ennstal dta/MakeVegsoup.R")
#	this is a build script for all available data sets#
#	referencing to https://github.com/kardinal-eros/vegsoup-standards/tree/master/austrian%20standard%20list%202008#
#
library(vegsoup)#
library(RefManageR)#
library(knitr)#
library(rgdal)#
library(naturalsort)#
library(bibtex)#
library(stringr)#
#
rm(list = ls())#
#
path <- "~/Documents/vegsoup-data"#
x <- list.files(path)#
#
#	files to ignore#
ii <- c(#
#	other files#
	"CHANGES.md",#
	"README.md",#
	"README.png",	#
	"mirror",#
	"givd",	# to be deleted#
#	unfished data sets#
	"dirnböck1999",#
	"brunner2011",#
	"dunzendorfer1980",#
	"greimler1996",#
	"greimler1997",#
	"grims1982",#
	"hohewand fence dta",#
	"hohewand transect dta",#
	"jakubowsky1996",#
	"monte negro dta",#
	"nußbaumer2000",#
	"pflugbeil2012",#
	"ruttner1994",#
	"sobotik1998",#
	"schwarz1989",#
	"stadler1991", # to be deleted#
	"stadler1992", # to be deleted#
	"surina2004",#
#	occurrence plots only#
	"alt ems dta",#
	"adnet dta",#
	"bräumauer dta",#
	"glasenbachklamm dta",#
	"graswang dta",#
	"illschlucht dta",#
	"jansenmäuer dta",#
	"kreuzmauer dta",#
	"lichtl dta",#
	"luegstein dta",#
	"montikel dta",#
	"priental dta",#
	"reitnerkogel dta",#
	"schartenmauer dta",#
	"schieferstein dta",#
	"schrattenboden dta",#
	"wirlingwand dta",#
	"ybbs and türnitz prealps dta",#
	"zwurms meschach dta",	#
#	independent taxonomy#
	"crete dta",#
	"javakheti dta",#
	"cape hallet lichen dta",#
	"salzkammergut lichen dta",#
	"kalkalpen lichen dta",#
#	custom coverscale and taxonomy#
	"furka dta",		#
#	turboveg taxonomy (keep in sync with *mirror turboveg.R*)#
	"aspro dta",#
	"donauauen dta",#
	"enzersfeld dta",#
	"fischamend dta",	#
	"hainburg dta",#
	"kirchdorf and steyr-land dta",#
	"mountain hay meadows dta",#
	"nackter sattel dta",#
	"neusiedlersee dta",#
	"pilgersdorf dta",#
	"ravine forest dta",	#
	"reichraming dta",#
	"sankt margarethen dta",#
	"seekirchen dta",	#
	"südburgenland dta",#
	"traun and steyr and ennstal dta",#
	"vorarlberg dta",#
	"wien dta",#
	"wienerwald dta",#
	"witzelsdorf dta"#
)#
#
#	test project exclusion list#
stopifnot(all(ii %in% x))#
#
x <- x[ -match(ii, x) ]#
#
#	run build update?#
build = T#
#
#	WARNING, running a Make-file will#
#	delete *all* objects in the enviroment when leaving.#
if (build) {	#
	sapply(file.path(path, x, "MakeVegsoup.R"), function (x) {#
		cat(x, "\n")#
		source(x)#
		} )#
}
vegsoup::bind
library(vegit)#
library(vegsoup)#
require(bibtex)#
#
path <- "~/Documents/vegsoup-data/dullnig1989"#
bib <- read.bib(file.path(path, "references.bib"), encoding = "UTF-8"); key <- bib$key#
#
#	reference list#
Z <- read.csv2("~/Documents/vegsoup-standards/austrian standard list 2008/austrian standard list 2008.csv",#
	colClasses = "character")#
#
#	 ... and read authored translate list#
zz <- read.csv(file.path(path, "translate.csv"),#
	colClasses = "character")#
zz <- join(zz, Z)#
#
#	interpreted classification#
alliance <- c("Cratoneurion",#
	"Cardamino-Montio",#
	"Cardamino-Montio",#
	"Caricion fuscae")#
#
association <- c("Cratoneuretum falcati Gams 1927",#
	"Montio-Bryetum schleicheri Br.-Bl. 1925",#
	"Dicranella palustris-Philontis seriata prov. Dullnig 1989",#
	"Caricetum goodenowii Braun 1915")#
#
#	make function for tables 1:4#
make <- function (tab = 1) {#
	file <- file.path(path, paste0("Dullnig1989Tab", tab, ".txt"))#
	x <- read.verbatim(file, colnames = "Aufnahmenummer", layers = "@", vertical = FALSE)#
	x1 <- species(x)#
	file <- file.path(path, paste0("Dullnig1989Tab", tab, "FooterSpecies.txt"))#
	x2 <- castFooter(file, abundance.first = FALSE, layers = "@")#
	#x2 <- species(x2)#
	X <- vegsoup::bind(x1, x2)#
	X$cov[ X$cov == "R" ] <- "r"#
	species(X) <- zz#
	y1 <- header(x)[, -1]#
	names(y1) <- c("pls", "expo", "slope", "pH", "dH", "hcov", "richness.hl", "mcov", "richness.ml")#
	y1 <- cbind(plot = as.character(rownames(y1)), y1)#
	y1$pH <- y1$pH / 10#
	y1 <- stackSites(x = y1, zeros = FALSE)#
	file <- file.path(path, paste0("Dullnig1989Tab", tab, "Locations.csv"))#
	y2 <- stackSites(file = file, sep = ",", zeros = FALSE)#
	Y <- vegsoup::bind(y1, y2)#
	obj <- Vegsoup(X, Y, Z, coverscale = "braun.blanquet2")#
	obj$tab <- tab#
	obj$alliance <- alliance[tab]#
	obj$association <- association[tab]#
	return(obj)#
}#
#
obj <- sapply(1:4, make)#
obj <- do.call("vegsoup::bind", obj)
#	this is a build script for all available data sets#
#	referencing to https://github.com/kardinal-eros/vegsoup-standards/tree/master/austrian%20standard%20list%202008#
#
library(vegsoup)#
library(RefManageR)#
library(knitr)#
library(rgdal)#
library(naturalsort)#
library(bibtex)#
library(stringr)#
#
rm(list = ls())#
#
path <- "~/Documents/vegsoup-data"#
x <- list.files(path)#
#
#	files to ignore#
ii <- c(#
#	other files#
	"CHANGES.md",#
	"README.md",#
	"README.png",	#
	"mirror",#
	"givd",	# to be deleted#
#	unfished data sets#
	"dirnböck1999",#
	"brunner2011",#
	"dunzendorfer1980",#
	"greimler1996",#
	"greimler1997",#
	"grims1982",#
	"hohewand fence dta",#
	"hohewand transect dta",#
	"jakubowsky1996",#
	"monte negro dta",#
	"nußbaumer2000",#
	"pflugbeil2012",#
	"ruttner1994",#
	"sobotik1998",#
	"schwarz1989",#
	"stadler1991", # to be deleted#
	"stadler1992", # to be deleted#
	"surina2004",#
#	occurrence plots only#
	"alt ems dta",#
	"adnet dta",#
	"bräumauer dta",#
	"glasenbachklamm dta",#
	"graswang dta",#
	"illschlucht dta",#
	"jansenmäuer dta",#
	"kreuzmauer dta",#
	"lichtl dta",#
	"luegstein dta",#
	"montikel dta",#
	"priental dta",#
	"reitnerkogel dta",#
	"schartenmauer dta",#
	"schieferstein dta",#
	"schrattenboden dta",#
	"wirlingwand dta",#
	"ybbs and türnitz prealps dta",#
	"zwurms meschach dta",	#
#	independent taxonomy#
	"crete dta",#
	"javakheti dta",#
	"cape hallet lichen dta",#
	"salzkammergut lichen dta",#
	"kalkalpen lichen dta",#
#	custom coverscale and taxonomy#
	"furka dta",		#
#	turboveg taxonomy (keep in sync with *mirror turboveg.R*)#
	"aspro dta",#
	"donauauen dta",#
	"enzersfeld dta",#
	"fischamend dta",	#
	"hainburg dta",#
	"kirchdorf and steyr-land dta",#
	"mountain hay meadows dta",#
	"nackter sattel dta",#
	"neusiedlersee dta",#
	"pilgersdorf dta",#
	"ravine forest dta",	#
	"reichraming dta",#
	"sankt margarethen dta",#
	"seekirchen dta",	#
	"südburgenland dta",#
	"traun and steyr and ennstal dta",#
	"vorarlberg dta",#
	"wien dta",#
	"wienerwald dta",#
	"witzelsdorf dta"#
)#
#
#	test project exclusion list#
stopifnot(all(ii %in% x))#
#
x <- x[ -match(ii, x) ]#
#
#	run build update?#
build = FALSE#
#
#	WARNING, running a Make-file will#
#	delete *all* objects in the enviroment when leaving.#
if (build) {	#
	sapply(file.path(path, x, "MakeVegsoup.R"), function (x) {#
		cat(x, "\n")#
		source(x)#
		} )#
}
sapply(file.path(path, x, "MakeVegsoup.R"), function (x) {#
		cat(x, "\n")#
		source(x)#
		} )
?detach
detach("raster")
detach(raster)
source("/Users/roli/Documents/vegsoup-data/prebersee dta/MakeVegsoup.R")
source("/Users/roli/Documents/vegsoup-data/prebersee dta/MakeVegsoup.R")
